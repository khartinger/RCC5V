//_____D1_class_Screen154.h______________________khartinger_____
// The class Screen154 extends the classes
//   U8G2_SSD1309_128X64_NONAME0_F_HW_I2C : U8G2
// with screen methods to write text on a OLED display.
// See also:
//   https://github.com/olikraus/u8g2
//   https://github.com/olikraus/u8g2/wiki/u8g2setupcpp#ssd1309-128x64_noname0
//   https://github.com/olikraus/u8g2/wiki/fntlistallplain
//   https://github.com/olikraus/u8g2/wiki/u8g2reference
//
// Hardware: (1) WeMos D1 Mini or ESP32
//           (2) OLED Shield: 1.54" SSD1309, 128x64 pixel, I2C
// Created by Karl Hartinger, March 04, 2024
// Changes:
// 2024-03-04 New
// Released into the public domain.

//extern const uint8_t u8g2_font_KH_cp437_6x8_mf[] U8G2_FONT_SECTION("u8g2_font_KH_cp437_6x8_mf");

#include <Arduino.h>
#include "src/cppsrc/U8g2lib.h"

#define BC U8G2_SSD1309_128X64_NONAME0_F_HW_I2C
#ifndef uchar
 #define uchar unsigned char
#endif
#define DOT                  '.'
#define BLACK                0
#define WHITE                1
#define FONT_TITLE           ((uint8_t *) u8g2_font_7x14B_mf)
#define FONT_TEXT            ((uint8_t *) u8g2_font_5x8_mf)
#define FONT_TOP             1
#define FONT_CENTER          2
#define FONT_BASELINE        3
#define FONT_BOTTOM          4
#define LINE_MAX_154         8         // line numbers are 1 to 8
#define DOT_COUNTER_MAX      (1+LINE_MAX_154) // 0=dot screen + 8 lines

class Screen154 : public BC {
 protected:
 //-----properties----------------------------------------------
  uint8_t *fontTitle;                  // 
  uint8_t *fontText;                   // 
  bool    _cp437;                      // true: use CP437
  int     dotCounter[DOT_COUNTER_MAX]; // counter for 0=dot screen
                                       // or 1..8 dot lines
  const int displayHeight=BC::getDisplayHeight();     // 64
  const int displayWidth=BC::getDisplayWidth();       // 128
  int fontPositionY;                   // 1=top|2=center|3=baseline|4=bottom
 public:
 //-----constructor & co---------------------------------------
  Screen154() : BC(U8G2_R0, /* reset=*/ U8X8_PIN_NONE) {
   _cp437=false;
   clearAllDotCounter();
   // BC::setBusClock(10000);
 };
 
 //------setter, getter, working methods------------------------
 public:
  int  setFontPositionY(int pos);
  int  getFontPositionY();
  bool setDotCounter(int line_, int startpos_);
  void clearAllDotCounter();

 //-----configure screens---------------------------------------
 public:
  void begin();                        // start I2C, display
  void useCP437(bool do_it=true) { _cp437=do_it; };
  void display();                      // show content 1st page

  //-----two-color-screen with title and text-------------------
  void screen14Clear(int line_, const String &text_);
  void screen14Clear(int line_, const String &text_, char align_);
  void screen14(int line_, const String &text_);
  void screen14(int line_, const String &text_, char align_);
  void screen14(int line_, const String &text_, char align_, bool cls_);
  void screen14Dot(int line_);
  void screen14Dot(int line_, int initvalue);
  
  void screen15Clear(int line_, const String &text_);
  void screen15Clear(int line_, const String &text_, char align_);
  void screen15(int line_, const String &text_);
  void screen15(int line_, const String &text_, char align_);
  void screen15(int line_, const String &text_, char align_, bool cls_);
  void screen15Dot(int line_);
  void screen15Dot(int line_, int initvalue);

  void screen16Clear(int line_, const String &text_);
  void screen16Clear(int line_, const String &text_, char align_);
  void screen16(int line_, const String &text_);
  void screen16(int line_, const String &text_, char align_);
  void screen16(int line_, const String &text_, char align_, bool cls_);
  void screen16Dot(int line_);
  void screen16Dot(int line_, int initvalue);

  //-----one-color-screen only with text (no title)-------------
  void screen7Clear(int line_, const String &text_);
  void screen7Clear(int line_, const String &text_, char align_);
  void screen7(int line_, const String &text_);
  void screen7(int line_, const String &text_, char align_);
  void screen7(int line_, const String &text_, char align_, bool cls_);
  void screen7Dot(int line_);
  void screen7Dot(int line_, int initvalue);

  void screen8Clear(int line_, const String &text_);
  void screen8Clear(int line_, const String &text_, char align_);
  void screen8(int line_, const String &text_);
  void screen8(int line_, const String &text_, char align_);
  void screen8(int line_, const String &text_, char align_, bool cls_);
  void screen8Dot(int line_);
  void screen8Dot(int line_, int initvalue);

 //-----special screens-----------------------------------------
  void dotClear(void);                 // clear, draw border
  void dotClear(String title_);        // clear, border, title
  void dot(void);                      // plot a dot
  void dotLine(String line6);          // text in last line
  void dotTitle(String title_);        // plot title and dot
  void dotTitleOnly(String title_);    // plot title only

  //-----helper methodes----------------------------------------
  void screenX(int line_, const String &text_, char align_, bool cls_, int y0_, int dline_);
  void screenXY(int line_, const String &text_, char align_, bool cls_, int y0_, int dline_);
  void screenXDot(int y0_, int dline_, int line_);
  void screenXYDot(int y0_, int dline_, int line_);
  String mytrim(int max_, String txt_, char align_);

 //------font specific methods----------------------------------
  int  getFontWidth();
  int  getFontHeight();
  void setFontTitle(const uint8_t *pfont1); // save font pointer
  void setFontText(const uint8_t *pont1);   // save font pointer
  void useFontTitle();                      // use font for writing
  void useFontText();                       // use font for writing

 //------draw methods-------------------------------------------
  void   clear();
  void   drawChars(int16_t x, int16_t y, char *text, int16_t length);
  void   drawString(int16_t x, int16_t y, String strUser);
  void   drawString(int16_t x, int16_t y, String strUser, int fontPosition);
  void   drawRect(int16_t x, int16_t y, int16_t width, int16_t height);
  void   fillRect(int16_t x, int16_t y, int16_t width, int16_t height);
  void   drawStringUsingCP437(int16_t xMove, int16_t yMove, String strUser);

  //-----utf8 specific methods----------------------------------
  int    utf8length(String s1);
  String utf8substring(String source, int from1, int len2);
  int    utf8NumberOfBytes(uchar utf8[]);   // 1..4, 0 on error
  int    utf8FirstOfNBytes(uchar c0);       // 1..4 first of byte(s), 0=NOT

  //-----utf8 <-> cp437 methods---------------------------------
  //_____convert a hole utf8-string to cp437 array______________
  int stringToCP437(String strUser, char* ptext);
  //_____convert utf8 character to code page 437 char (= 1 byte)
  // return: cp437 char
  uchar utf8ToCP437(uchar utf8[]);
  //_____convert cp437 char to utf8 char (1..3 bytes)___________
  // return: number of bytes of utf8 char (1..3), 0 on error
  int CP437ToUtf8(uchar cp437, uchar utf8[]);
  //_____convert cp437 char to String___________________________
  // return: (utf8-)string for given char
  String CP437ToString(uchar cp437);
  //_____convert utf8 array to code page 437 array______________
  // return: number of bytes of cp437 array
  int aUtf8ToCP437(int num, uchar autf8[], uchar acp437[]);
  //_____convert cp437 array to utf8 array______________________
  // return: number of bytes of utf8 array
  int aCP437ToUtf8(int num, uchar acp437[], uchar autf8[]);
};

const uchar table_cp437_utf8[] PROGMEM = {
//const uchar table_cp437_utf8[] = {
/* 0x20,0x20,0x00,0x00,
0x21,0x21,0x00,0x00,
0x22,0x22,0x00,0x00,
0x23,0x23,0x00,0x00,
0x24,0x24,0x00,0x00,
0x25,0x25,0x00,0x00,
0x26,0x26,0x00,0x00,
0x27,0x27,0x00,0x00,
0x28,0x28,0x00,0x00,
0x29,0x29,0x00,0x00,
0x2A,0x2A,0x00,0x00,
0x2B,0x2B,0x00,0x00,
0x2C,0x2C,0x00,0x00,
0x2D,0x2D,0x00,0x00,
0x2E,0x2E,0x00,0x00,
0x2F,0x2F,0x00,0x00,
0x30,0x30,0x00,0x00,
0x31,0x31,0x00,0x00,
0x32,0x32,0x00,0x00,
0x33,0x33,0x00,0x00,
0x34,0x34,0x00,0x00,
0x35,0x35,0x00,0x00,
0x36,0x36,0x00,0x00,
0x37,0x37,0x00,0x00,
0x38,0x38,0x00,0x00,
0x39,0x39,0x00,0x00,
0x3A,0x3A,0x00,0x00,
0x3B,0x3B,0x00,0x00,
0x3C,0x3C,0x00,0x00,
0x3D,0x3D,0x00,0x00,
0x3E,0x3E,0x00,0x00,
0x3F,0x3F,0x00,0x00,
0x40,0x40,0x00,0x00,
0x41,0x41,0x00,0x00,
0x42,0x42,0x00,0x00,
0x43,0x43,0x00,0x00,
0x44,0x44,0x00,0x00,
0x45,0x45,0x00,0x00,
0x46,0x46,0x00,0x00,
0x47,0x47,0x00,0x00,
0x48,0x48,0x00,0x00,
0x49,0x49,0x00,0x00,
0x4A,0x4A,0x00,0x00,
0x4B,0x4B,0x00,0x00,
0x4C,0x4C,0x00,0x00,
0x4D,0x4D,0x00,0x00,
0x4E,0x4E,0x00,0x00,
0x4F,0x4F,0x00,0x00,
0x50,0x50,0x00,0x00,
0x51,0x51,0x00,0x00,
0x52,0x52,0x00,0x00,
0x53,0x53,0x00,0x00,
0x54,0x54,0x00,0x00,
0x55,0x55,0x00,0x00,
0x56,0x56,0x00,0x00,
0x57,0x57,0x00,0x00,
0x58,0x58,0x00,0x00,
0x59,0x59,0x00,0x00,
0x5A,0x5A,0x00,0x00,
0x5B,0x5B,0x00,0x00,
0x5C,0x5C,0x00,0x00,
0x5D,0x5D,0x00,0x00,
0x5E,0x5E,0x00,0x00,
0x5F,0x5F,0x00,0x00,
0x60,0x60,0x00,0x00,
0x61,0x61,0x00,0x00,
0x62,0x62,0x00,0x00,
0x63,0x63,0x00,0x00,
0x64,0x64,0x00,0x00,
0x65,0x65,0x00,0x00,
0x66,0x66,0x00,0x00,
0x67,0x67,0x00,0x00,
0x68,0x68,0x00,0x00,
0x69,0x69,0x00,0x00,
0x6A,0x6A,0x00,0x00,
0x6B,0x6B,0x00,0x00,
0x6C,0x6C,0x00,0x00,
0x6D,0x6D,0x00,0x00,
0x6E,0x6E,0x00,0x00,
0x6F,0x6F,0x00,0x00,
0x70,0x70,0x00,0x00,
0x71,0x71,0x00,0x00,
0x72,0x72,0x00,0x00,
0x73,0x73,0x00,0x00,
0x74,0x74,0x00,0x00,
0x75,0x75,0x00,0x00,
0x76,0x76,0x00,0x00,
0x77,0x77,0x00,0x00,
0x78,0x78,0x00,0x00,
0x79,0x79,0x00,0x00,
0x7A,0x7A,0x00,0x00,
0x7B,0x7B,0x00,0x00,
0x7C,0x7C,0x00,0x00,
0x7D,0x7D,0x00,0x00,
0x7E,0x7E,0x00,0x00,
0x7F,0x7F,0x00,0x00,*/
//0x80,0xE2,0x82,0xAC,
0x80,0xE2,0x82,0xAC,  // Euro instead of C,
0x81,0xC3,0xBC,0x00,
0x82,0xC3,0xA9,0x00,
0x83,0xC3,0xA2,0x00,
0x84,0xC3,0xA4,0x00,
0x85,0xC3,0xA0,0x00,
0x86,0xC3,0xA5,0x00,
0x87,0xC3,0xA7,0x00,
0x88,0xC3,0xAA,0x00,
0x89,0xC3,0xAB,0x00,
0x8A,0xC3,0xA8,0x00,
0x8B,0xC3,0xAF,0x00,
0x8C,0xC3,0xAE,0x00,
0x8D,0xC3,0xAC,0x00,
0x8E,0xC3,0x84,0x00,
0x8F,0xC3,0x85,0x00,
0x90,0xC3,0x89,0x00,
0x91,0xC3,0xA6,0x00,
0x92,0xC3,0x86,0x00,
0x93,0xC3,0xB4,0x00,
0x94,0xC3,0xB6,0x00,
0x95,0xC3,0xB2,0x00,
0x96,0xC3,0xBB,0x00,
0x97,0xC3,0xB9,0x00,
0x98,0xC3,0xBF,0x00,
0x99,0xC3,0x96,0x00,
0x9A,0xC3,0x9C,0x00,
0x9B,0xC2,0xA2,0x00,
0x9C,0xC2,0xA3,0x00,
0x9D,0xC2,0xA5,0x00,
0x9E,0xE2,0x82,0xA7,
0x9F,0xC6,0x92,0x00,
0xA0,0xC3,0xA1,0x00,
0xA1,0xC3,0xAD,0x00,
0xA2,0xC3,0xB3,0x00,
0xA3,0xC3,0xBA,0x00,
0xA4,0xC3,0xB1,0x00,
0xA5,0xC3,0x91,0x00,
0xA6,0xC2,0xAA,0x00,
0xA7,0xC2,0xBA,0x00,
0xA8,0xC2,0xBF,0x00,
0xA9,0xE2,0x8C,0x90,
0xAA,0xC2,0xAC,0x00,
0xAB,0xC2,0xBD,0x00,
0xAC,0xC2,0xBC,0x00,
0xAD,0xC2,0xA1,0x00,
0xAE,0xC2,0xAB,0x00,
0xAF,0xC2,0xBB,0x00,
0xB0,0xE2,0x96,0x91,
0xB1,0xE2,0x96,0x92,
0xB2,0xE2,0x96,0x93,
0xB3,0xE2,0x94,0x82,
0xB4,0xE2,0x94,0xA4,
0xB5,0xE2,0x95,0xA1,
0xB6,0xE2,0x95,0xA2,
0xB7,0xE2,0x95,0x96,
0xB8,0xE2,0x95,0x95,
0xB9,0xE2,0x95,0xA3,
0xBA,0xE2,0x95,0x91,
0xBB,0xE2,0x95,0x97,
0xBC,0xE2,0x95,0x9D,
0xBD,0xE2,0x95,0x9C,
0xBE,0xE2,0x95,0x9B,
0xBF,0xE2,0x94,0x90,
0xC0,0xE2,0x94,0x94,
0xC1,0xE2,0x94,0xB4,
0xC2,0xE2,0x94,0xAC,
0xC3,0xE2,0x94,0x9C,
0xC4,0xE2,0x94,0x80,
0xC5,0xE2,0x94,0xBC,
0xC6,0xE2,0x95,0x9E,
0xC7,0xE2,0x95,0x9F,
0xC8,0xE2,0x95,0x9A,
0xC9,0xE2,0x95,0x94,
0xCA,0xE2,0x95,0xA9,
0xCB,0xE2,0x95,0xA6,
0xCC,0xE2,0x95,0xA0,
0xCD,0xE2,0x95,0x90,
0xCE,0xE2,0x95,0xAC,
0xCF,0xE2,0x95,0xA7,
0xD0,0xE2,0x95,0xA8,
0xD1,0xE2,0x95,0xA4,
0xD2,0xE2,0x95,0xA5,
0xD3,0xE2,0x95,0x99,
0xD4,0xE2,0x95,0x98,
0xD5,0xE2,0x95,0x92,
0xD6,0xE2,0x95,0x93,
0xD7,0xE2,0x95,0xAB,
0xD8,0xE2,0x95,0xAA,
0xD9,0xE2,0x94,0x98,
0xDA,0xE2,0x94,0x8C,
0xDB,0xE2,0x96,0x88,
0xDC,0xE2,0x96,0x84,
0xDD,0xE2,0x96,0x8C,
0xDE,0xE2,0x96,0x90,
0xDF,0xE2,0x96,0x80,
0xE0,0xCE,0xB1,0x00,
0xE1,0xC3,0x9F,0x00,
0xE2,0xCE,0x93,0x00,
0xE3,0xCF,0x80,0x00,
0xE4,0xCE,0xA3,0x00,
0xE5,0xCF,0x83,0x00,
0xE6,0xC2,0xB5,0x00,
0xE7,0xCF,0x84,0x00,
0xE8,0xCE,0xA6,0x00,
0xE9,0xCE,0x98,0x00,
0xEA,0xCE,0xA9,0x00,
0xEB,0xCE,0xB4,0x00,
0xEC,0xE2,0x88,0x9E,
0xED,0xCF,0x86,0x00,
0xEE,0xCE,0xB5,0x00,
0xEF,0xE2,0x88,0xE9,
0xF0,0xE2,0x89,0xA1,
0xF1,0xC2,0xB1,0x00,
0xF2,0xE2,0x89,0xA5,
0xF3,0xE2,0x89,0xA4,
0xF4,0xE2,0x8C,0xA0,
0xF5,0xE2,0x8C,0xA1,
0xF6,0xC3,0xB7,0x00,
0xF7,0xE2,0x89,0x88,
0xF8,0xC2,0xB0,0x00,
0xF9,0xE2,0x88,0x99,
0xFA,0xC2,0xB7,0x00,
0xFB,0xE2,0x88,0x9A,
0xFC,0xE1,0x81,0xBF,
0xFD,0xC2,0xB2,0x00,
0xFE,0xE2,0x96,0xA0,
0xFF,0xC2,0xA0,0x00,
};
